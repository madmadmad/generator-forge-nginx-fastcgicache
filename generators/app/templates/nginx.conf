fastcgi_cache_path /var/run/nginx-cache/<%= config.cacheKey %> levels=1:2 keys_zone=<%= config.cacheKey %>:256m inactive=7d use_temp_path=off max_size=256m;

# FORGE CONFIG (DO NOT REMOVE!)
include forge-conf/<%= config.siteName %>/before/*;

# Bots to ban via user agent
map $http_user_agent $limit_bots {
     default 0;
     ~*(AhrefsBot|Baiduspider|PaperLiBot) 1;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name <%= config.siteName %>;
    server_tokens off;
    root /home/forge/<%= config.siteName %>/<%= config.webroot %>;
    index index.html index.htm index.php;
    charset utf-8;

  <% if (config.gzipOn) { %>
    # Enable serving of static gzip files as per: http://nginx.org/en/docs/http/ngx_http_gzip_static_module.html
    gzip_static  on;
  <% } %>

    # Disable limits on the maximum allowed size of the client request body
    client_max_body_size <%= config.maxPostSize %>;

    # Ban certain bots from crawling the site
    if ($limit_bots = 1) {
        return 403;
    }

    # 404 error handler
    error_page 404 /index.php?$query_string;

    # 301 Redirect URLs with trailing /'s as per https://webmasters.googleblog.com/2010/04/to-slash-or-not-to-slash.html
    rewrite ^/(.*)/$ /$1 permanent;

    # Change // -> / for all URLs, so it works for our php location block, too
    merge_slashes off;
    rewrite (.*)//+(.*) $1/$2 permanent;

 <% if (config.wordpress) { %>
    # For WordPress bots/users
    location ~ ^/(wp-login|wp-admin|wp-config|wp-content|wp-includes|xmlrpc) {
        return 301 https://wordpress.com/wp-login.php;
    }
  <% } %>

    access_log off;
    error_log  /var/log/nginx/<%= config.siteName %>-error.log error;

    # FORGE SSL (DO NOT REMOVE!)
    <%= config.sslCert %>
    <%= config.sslKey %>

    ssl_protocols TLSv1.2;
    ssl_ciphers ECDH-ECDSA-AES128-SHA:ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/nginx/dhparams.pem;

    # FORGE CONFIG (DO NOT REMOVE!)
    include forge-conf/<%= config.siteName %>/server/*;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    
    # Cache everything by default
    fastcgi_cache_key "$scheme$request_method$host$request_uri";
    add_header X-Cache $upstream_cache_status;

    # Disable cache for specific routes/ req types
    set $no_cache 0;
    if ($request_method = POST){
      set $no_cache 1;
    }
    if ($request_uri ~* "/(admin/|cpresources/)"){
      set $no_cache 1;
    }
    if ($query_string != "")
    {
        set $no_cache 1;
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    location ^~ /admin {
      try_files $uri $uri/ @phpfpm_nocache;
    }
    location ^~ /index.php/admin {
      try_files $uri $uri/ @phpfpm_nocache;
    }
    
    location ^~ /cpresources {
      try_files $uri $uri/ /index.php?$query_string;
    }

    location ^~ /admin/?(.*)$ {
      try_files $uri $uri/ @phpfpm_nocache;
    }
    
    location ^~ /index.php/admin/?(.*)$ {
      try_files $uri $uri/ @phpfpm_nocache;
    }
    
    location ~* /index.php/?(\?*p=admin) {
      try_files $uri $uri/ @phpfpm_nocache;
    }

    location ~ [^/]\.php(/|$) {
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      fastcgi_pass unix:/var/run/php/php<%= config.phpVersion %>-fpm.sock;
      fastcgi_index index.php;
      include fastcgi_params;

      fastcgi_param PATH_INFO $fastcgi_path_info;
      fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
      fastcgi_param DOCUMENT_ROOT $realpath_root;
      fastcgi_param HTTP_PROXY "";
      fastcgi_param HTTP_HOST <%= config.siteName %>;

      # shared php-fpm configuration
      fastcgi_intercept_errors off;
      fastcgi_buffer_size 16k;
      fastcgi_buffers 4 16k;
      fastcgi_connect_timeout 300;
      fastcgi_send_timeout 300;
      fastcgi_read_timeout 300;

      # FastCGI Cache Settings
      fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
      fastcgi_cache <%= config.cacheKey %>;
      fastcgi_cache_valid 200 7d;
      fastcgi_cache_bypass $no_cache;
      fastcgi_no_cache $no_cache;
      fastcgi_cache_use_stale updating error timeout invalid_header http_500;
      fastcgi_cache_lock on;
    }

    location @phpfpm_nocache {
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      fastcgi_pass unix:/var/run/php/php<%= config.phpVersion %>-fpm.sock;
      fastcgi_index index.php;
      include fastcgi_params;
      fastcgi_param SCRIPT_FILENAME $document_root/index.php;
      fastcgi_param PATH_INFO $query_string;

      # shared php-fpm configuration
      fastcgi_intercept_errors off;
      fastcgi_buffer_size 16k;
      fastcgi_buffers 4 16k;
      fastcgi_connect_timeout 300;
      fastcgi_send_timeout 300;
      fastcgi_read_timeout 300;

      # Don't allow browser caching of dynamically generated content
      add_header Last-Modified $date_gmt;
      add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
      if_modified_since off;
      expires off;
      etag off;

      # No FastCGI Cache
      fastcgi_cache_bypass 1;
      fastcgi_no_cache 1;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }

  <% if (config.gzipOn) { %>
    gzip on;
    gzip_comp_level 5;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/rss+xml
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/svg+xml
      image/x-icon
      text/css
      text/javascript
      text/plain
      text/x-component;
    
    # CSS and Javascript
    location ~* \.(?:css|js)$ {
      etag off;
      expires 1y;
      access_log off;
      add_header Cache-Control "public";
    }

    # WebFonts
    location ~* \.(?:ttf|ttc|otf|eot|woff|woff2)$ {
      etag off;
      expires 1M;
      access_log off;
      add_header Cache-Control "public";
     }
  <% } %>
}

# FORGE CONFIG (DO NOT REMOVE!)
include forge-conf/<%= config.siteName %>/after/*;
